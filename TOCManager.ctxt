#BlueJ class context
comment0.params=
comment0.target=TOCManager()
comment0.text=\r\n\ The\ constructor.\ Will\ set\ up\ the\ TOCDatabase\ object\ which\ will\ allow\ us\ to\ communicate\ with\ the\ SQL\ database\r\n
comment1.params=
comment1.target=void\ addItemToTransaction()
comment1.text=\r\n\ Adds\ the\ current\ item\ to\ the\ transactions\ list\r\n
comment10.params=
comment10.target=boolean\ getMemberAdmin()
comment10.text=\r\n\ Get\ the\ current\ member's\ admin\ status\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ The\ current\ member's\ admin\ flag\r\n
comment11.params=barcode
comment11.target=boolean\ changeItem(java.lang.String)
comment11.text=\r\n\ Handle\ a\ new\ item\r\n\ \r\n\ @param\ \ \ barcode\ \ \ \ \ the\ barcode\ of\ the\ item\ to\ allow\ us\ to\ search\ the\ database\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ boolean\ representing\ if\ the\ item\ was\ found\ or\ not\r\n
comment12.params=cost\ barcode
comment12.target=void\ updateCost(double,\ int)
comment12.text=\r\n\ Receives\ the\ values\ for\ the\ cost\ update\ and\ sends\ them\ to\ the\ database\ manager\r\n\ \r\n\ @param\ cost\ the\ updated\ cost\r\n\ @param\ barcode\ the\ barcode\ of\ the\ item\ being\ updated\r\n
comment13.params=barcode
comment13.target=void\ removeItem(java.lang.String)
comment13.text=\r\n\ Receives\ the\ barcode\ of\ the\ item\ to\ be\ removed\r\n\ \r\n\ @param\ barcode\ the\ barcode\ of\ the\ item\ to\ be\ removed\r\n
comment14.params=barcode\ name\ cost\ stock
comment14.target=void\ newItem(java.lang.String,\ java.lang.String,\ double,\ int)
comment14.text=\r\n\ Adds\ a\ new\ item\ to\ the\ database.\ Will\ check\ if\ the\ current\ member\ has\ the\ rights\ to\ modify\ the\ database\r\n\ \r\n\ @param\ \ \ barcode\ \ \ \ \ the\ item's\ barcode\r\n\ @param\ \ \ name\ \ \ \ \ \ \ \ the\ item's\ name\r\n\ @param\ \ \ cost\ \ \ \ \ \ \ \ the\ item's\ cost\r\n\ @param\ \ \ stock\ \ \ \ \ \ \ the\ item's\ stock\r\n
comment15.params=
comment15.target=java.lang.String\ getItemBarcode()
comment15.text=\r\n\ Get\ the\ current\ item's\ barcode\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ item's\ barcode\r\n
comment16.params=
comment16.target=java.lang.String\ getItemName()
comment16.text=\r\n\ Get\ the\ current\ item's\ name\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ item's\ name\r\n
comment17.params=
comment17.target=double\ getItemCost()
comment17.text=\r\n\ Get\ the\ current\ item's\ cost\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ item's\ cost\r\n
comment18.params=
comment18.target=int\ getItemStock()
comment18.text=\r\n\ Get\ the\ current\ item's\ sotck\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ current\ stock\ of\ the\ item\r\n
comment2.params=
comment2.target=void\ finaliseTransaction()
comment2.text=\r\n\ Finalises\ the\ current\ transaction\ and\ stores\ the\ information\ in\ the\ database\r\n
comment3.params=
comment3.target=java.lang.String\ getBill()
comment3.text=\r\n\ A\ temporary\ function\ that\ will\ create\ a\ String\ representing\ a\ member's\ tab\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ A\ string\ representation\ of\ the\ bill\r\n
comment4.params=userPmKeys
comment4.target=boolean\ changeMember(int)
comment4.text=\r\n\ Handle\ a\ new\ user\r\n\ \r\n\ @param\ \ \ userPmKeys\ \ The\ new\ user's\ pmKeys\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ A\ boolean\ stating\ if\ the\ member\ was\ found\ and\ updated\r\n
comment5.params=pmKeys\ name\ admin
comment5.target=void\ newMember(int,\ java.lang.String,\ boolean)
comment5.text=\r\n\ Adds\ a\ new\ member\ to\ the\ database.\ Will\ check\ if\ the\ current\ member\ has\ the\ rights\ to\ modify\ the\ database\r\n\ \r\n\ @param\ \ \ pmKeys\ \ the\ new\ member's\ pmKeys\r\n\ @param\ \ \ name\ \ \ \ the\ new\ member's\ name\r\n\ @param\ \ \ admin\ \ \ if\ the\ new\ member\ is\ an\ admin\r\n
comment6.params=pmKeys
comment6.target=void\ removeMember(int)
comment6.text=\r\n\ Will\ remove\ member\ from\ the\ databse.\ Will\ not\ modify\ the\ transactions\ that\ member\ has\ made\ and\ will\ keep\ their\r\n\ bills\ stored\ in\ the\ transactions\ table.\ The\ database\ function\ this\ calls\ should\ check\ if\ the\ members\ first\ exists\r\n\ This\ function\ will\ not\ allow\ the\ user\ to\ remove\ a\ member\ with\ the\ same\ pmkeys\ as\ them\ (ie.\ themselves)\r\n\ \r\n\ @param\ \ \ pmKeys\ \ the\ member's\ pmKeys\r\n
comment7.params=pmKeys
comment7.target=void\ updateAdmin(int)
comment7.text=\r\n\ Checks\ to\ make\ sure\ the\ current\ admin\ is\ not\ removing\ themselves\r\n\ \r\n\ @param\ pmKeys\ the\ member's\ pmKeys\ to\ be\ updated\r\n
comment8.params=
comment8.target=int\ getMemberPmKeys()
comment8.text=\r\n\ Get\ the\ current\ member's\ pmKeys\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ The\ current\ member's\ pmKeys\r\n
comment9.params=
comment9.target=java.lang.String\ getMemberName()
comment9.text=\r\n\ Get\ the\ current\ member's\ name\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ The\ current\ member's\ name\r\n
numComments=19
